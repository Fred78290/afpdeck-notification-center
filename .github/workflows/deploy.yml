# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy

on:
  push:
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
      - ci-deploy

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
  GIT_ACTOR: ${{ github.actor }}
  GITHUB_TOKEN: ${{ github.token }}
  REPOSITORY_NAME: ${{ github.event.repository.name }}
  APICORE_CLIENT_ID: ${{ secrets.APICORE_CLIENT_ID }}
  APICORE_CLIENT_SECRET: ${{ secrets.APICORE_CLIENT_SECRET }}
  APICORE_BASE_URL: ${{ secrets.APICORE_BASE_URL }}
  APICORE_TEST_URL: ${{ secrets.APICORE_TEST_URL }}
  APICORE_USERNAME: ${{ secrets.APICORE_USERNAME }}
  APICORE_PASSWORD: ${{ secrets.APICORE_PASSWORD }}
  APICORE_EMAIL: ${{ secrets.APICORE_EMAIL }}
  APICORE_SERVICE_USERNAME: ${{ secrets.APICORE_SERVICE_USERNAME }}
  APICORE_SERVICE_PASSWORD: $${{ secrets.APICORE_SERVICE_PASSWORD }}
  APICORE_PUSH_USERNAME: ${{ secrets.APICORE_PUSH_USERNAME }}
  APICORE_PUSH_PASSWORD: ${{ secrets.APICORE_PUSH_PASSWORD }}
  APICORE_USE_SHAREDSERVICE: ${{ secrets.APICORE_USE_SHAREDSERVICE }}
  AFPDECK_PUSH_URL: ${{ secrets.AFPDECK_PUSH_URL }}
  USE_MONGODB: false
  MONGODB_URL: ${{ secrets.MONGODB_URL }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  DEBUG: ${{ vars.DEBUG }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Check environment
        shell: bash
        run: |
          [ -z "${AWS_ROLE_TO_ASSUME}" ] && (echo "AWS_ROLE_TO_ASSUME is missing" ; exit 1)
          [ -z "${AWS_REGION}" ] && (echo "AWS_REGION is missing" ; exit 1)
          [ -z "${DOMAIN_NAME}" ] && (echo "DOMAIN_NAME is missing" ; exit 1)
          echo "Every thing OK"
          exit

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Setup SAM
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Install AWS cli
        shell: bash
        run: |
          if [ $(uname -p) == "arm" ] || [ $(uname -p) == "aarch64" ]; then
            ARCH=arm64
          else
            ARCH=amd64
          fi

          curl -L -o install-aws.sh https://raw.githubusercontent.com/unfor19/install-aws-cli-action/master/entrypoint.sh && \
          chmod +x install-aws.sh
          sudo --preserve-env ./install-aws.sh "v2" "${ARCH}"
          rm install-aws.sh

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: backend-role-github-actions
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy
        shell: bash
        run: |
          ./deploy.sh
